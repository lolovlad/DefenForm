"""empty message

Revision ID: 9eb9785f80bd
Revises: 
Create Date: 2025-05-12 13:12:13.451343

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9eb9785f80bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('priority',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('coast', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_priority'))
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('service_selection',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_service_selection'))
    )
    op.create_table('status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_status'))
    )
    op.create_table('type_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_type_service')),
    sa.UniqueConstraint('name', name=op.f('uq_type_service_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trace_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('surname', sa.String(length=32), nullable=False),
    sa.Column('patronymics', sa.String(length=32), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=32), nullable=False),
    sa.Column('id_role', sa.Integer(), nullable=True),
    sa.Column('id_type_service', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id_role'], ['role.id'], name=op.f('fk_users_id_role_role')),
    sa.ForeignKeyConstraint(['id_type_service'], ['type_service.id'], name=op.f('fk_users_id_type_service_type_service')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('trace_id', name=op.f('uq_users_trace_id'))
    )
    op.create_table('claim',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trace_id', sa.String(), nullable=True),
    sa.Column('datetime_claim', sa.DateTime(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('id_worker', sa.Integer(), nullable=True),
    sa.Column('id_service_selection', sa.Integer(), nullable=True),
    sa.Column('id_priority', sa.Integer(), nullable=True),
    sa.Column('id_status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_priority'], ['priority.id'], name=op.f('fk_claim_id_priority_priority')),
    sa.ForeignKeyConstraint(['id_service_selection'], ['service_selection.id'], name=op.f('fk_claim_id_service_selection_service_selection')),
    sa.ForeignKeyConstraint(['id_status'], ['status.id'], name=op.f('fk_claim_id_status_status')),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], name=op.f('fk_claim_id_user_users')),
    sa.ForeignKeyConstraint(['id_worker'], ['users.id'], name=op.f('fk_claim_id_worker_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_claim')),
    sa.UniqueConstraint('trace_id', name=op.f('uq_claim_trace_id'))
    )
    op.create_table('contract',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trace_id', sa.String(), nullable=True),
    sa.Column('id_claim', sa.Integer(), nullable=True),
    sa.Column('datetime_contract', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('terms_and_conditions', sa.Text(), nullable=True),
    sa.Column('coast', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id_claim'], ['claim.id'], name=op.f('fk_contract_id_claim_claim')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contract')),
    sa.UniqueConstraint('trace_id', name=op.f('uq_contract_trace_id'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('contract')
    op.drop_table('claim')
    op.drop_table('users')
    op.drop_table('type_service')
    op.drop_table('status')
    op.drop_table('service_selection')
    op.drop_table('role')
    op.drop_table('priority')
    # ### end Alembic commands ###
